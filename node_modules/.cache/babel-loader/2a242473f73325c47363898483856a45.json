{"ast":null,"code":"var _jsxFileName = \"/Users/jroseman/play/football/app/src/renderers/PlayerSelectorRenderer.tsx\";\nimport React from 'react';\nimport gql from 'graphql-tag';\nimport { Query } from 'react-apollo';\nimport { Link } from 'react-router-dom';\nexport const GET_PLAYER_ABBR = gql`\n  query GetPlayerAbbrFromName($lastName: String){\n    dashPlayerTypeahead(lastName: $lastName) {\n      firstName,\n      lastName,\n      playerAbbr\n    }\n  }\n`;\n\nconst PlayerSelectorRenderer = ({\n  lastName\n}) => /*#__PURE__*/React.createElement(Query, {\n  query: GET_PLAYER_ABBR,\n  variables: {\n    lastName\n  },\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 3\n  }\n}, ({\n  loading,\n  data\n}) => !loading && /*#__PURE__*/React.createElement(\"ul\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 7\n  }\n}, data.dashPlayerTypeahead.map(player => /*#__PURE__*/React.createElement(\"li\", {\n  key: `li.${player.playerAbbr}`,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 11\n  }\n}, /*#__PURE__*/React.createElement(Link, {\n  key: player.playerAbbr,\n  to: `/p/${player.playerAbbr}`,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 13\n  }\n}, player.lastName, \", \", player.firstName)))));\n\nexport default PlayerSelectorRenderer;","map":{"version":3,"sources":["/Users/jroseman/play/football/app/src/renderers/PlayerSelectorRenderer.tsx"],"names":["React","gql","Query","Link","GET_PLAYER_ABBR","PlayerSelectorRenderer","lastName","loading","data","dashPlayerTypeahead","map","player","playerAbbr","firstName"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,GAAP,MAAgB,aAAhB;AACA,SAASC,KAAT,QAAsB,cAAtB;AACA,SAASC,IAAT,QAAqB,kBAArB;AAeA,OAAO,MAAMC,eAAe,GAAGH,GAAI;;;;;;;;CAA5B;;AAcP,MAAMI,sBAAsB,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,kBAC7B,oBAAC,KAAD;AAAO,EAAA,KAAK,EAAEF,eAAd;AAA+B,EAAA,SAAS,EAAE;AAAEE,IAAAA;AAAF,GAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACG,CAAC;AAAEC,EAAAA,OAAF;AAAWC,EAAAA;AAAX,CAAD,KAAqD,CAACD,OAAD,iBACpD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACGC,IAAI,CAACC,mBAAL,CAAyBC,GAAzB,CAA8BC,MAAD,iBAC5B;AAAI,EAAA,GAAG,EAAG,MAAKA,MAAM,CAACC,UAAW,EAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACE,oBAAC,IAAD;AAAM,EAAA,GAAG,EAAED,MAAM,CAACC,UAAlB;AAA8B,EAAA,EAAE,EAAG,MAAKD,MAAM,CAACC,UAAW,EAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACGD,MAAM,CAACL,QADV,QACsBK,MAAM,CAACE,SAD7B,CADF,CADD,CADH,CAFJ,CADF;;AAgBA,eAAeR,sBAAf","sourcesContent":["import React from 'react';\nimport gql from 'graphql-tag';\nimport { Query } from 'react-apollo';\nimport { Link } from 'react-router-dom';\n\ntype DashboardPlayerTypeahead = {\n  firstName: string,\n  lastName: string,\n  playerAbbr: string\n}\n\ntype DashboardPlayerQueryResponse = {\n  loading: boolean;\n  data: {\n    dashPlayerTypeahead: [DashboardPlayerTypeahead];\n  }\n}\n\nexport const GET_PLAYER_ABBR = gql`\n  query GetPlayerAbbrFromName($lastName: String){\n    dashPlayerTypeahead(lastName: $lastName) {\n      firstName,\n      lastName,\n      playerAbbr\n    }\n  }\n`;\n\ntype PlayerSelectorRendererProps = {\n  lastName?: string\n}\n\nconst PlayerSelectorRenderer = ({ lastName }: PlayerSelectorRendererProps) => (\n  <Query query={GET_PLAYER_ABBR} variables={{ lastName }}>\n    {({ loading, data }: DashboardPlayerQueryResponse) => !loading && (\n      <ul>\n        {data.dashPlayerTypeahead.map((player) => (\n          <li key={`li.${player.playerAbbr}`}>\n            <Link key={player.playerAbbr} to={`/p/${player.playerAbbr}`}>\n              {player.lastName}, {player.firstName}\n            </Link>\n          </li>\n        ))}\n      </ul>\n    )}\n  </Query>\n)\n\nexport default PlayerSelectorRenderer;\n"]},"metadata":{},"sourceType":"module"}