{"ast":null,"code":"var _jsxFileName = \"/Users/jroseman/play/football/app/src/containers/PlayerDashboardContainer.tsx\";\nimport React, { useState } from 'react';\nimport { PlayerPosition, SeasonSelection } from '../types/PlayerDashboardTypes';\nimport QBDashboardContainer from '../containers/QBDashboardContainer';\nimport styles from './PlayerDashboardContainer.module.css';\nimport SeasonSelector from '../components/SeasonSelectorComponent';\nconst ONE_SEASON = [2019];\nconst THREE_SEASONS = [2019, 2018, 2017];\nexport default (({\n  player\n}) => {\n  const [playerState, setPlayerState] = useState(player);\n  const {\n    firstName,\n    lastName,\n    primaryPosition\n  } = player.demographicData;\n  const oneSeasonGames = player.playerGames.filter(game => ONE_SEASON.includes(game.seasonYear));\n  const threeSeasonGames = player.playerGames.filter(game => THREE_SEASONS.includes(game.seasonYear));\n  const selectionGameMap = {\n    [SeasonSelection.One]: oneSeasonGames,\n    [SeasonSelection.Three]: threeSeasonGames,\n    [SeasonSelection.Lifetime]: player.playerGames\n  };\n\n  const onStateChange = selection => {\n    setPlayerState({ ...playerState,\n      playerGames: selectionGameMap[selection]\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.header,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }\n  }, firstName, \" \", lastName, \" \", primaryPosition, \" Dashboard\"), /*#__PURE__*/React.createElement(SeasonSelector, {\n    onStateChange: onStateChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }\n  })), renderDashboard(playerState));\n});\n\nfunction renderDashboard(player) {\n  if (player.demographicData.primaryPosition === PlayerPosition.Quarterback) {\n    return /*#__PURE__*/React.createElement(QBDashboardContainer, {\n      player: player,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 12\n      }\n    });\n  }\n}","map":{"version":3,"sources":["/Users/jroseman/play/football/app/src/containers/PlayerDashboardContainer.tsx"],"names":["React","useState","PlayerPosition","SeasonSelection","QBDashboardContainer","styles","SeasonSelector","ONE_SEASON","THREE_SEASONS","player","playerState","setPlayerState","firstName","lastName","primaryPosition","demographicData","oneSeasonGames","playerGames","filter","game","includes","seasonYear","threeSeasonGames","selectionGameMap","One","Three","Lifetime","onStateChange","selection","header","renderDashboard","Quarterback"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAAiBC,cAAjB,EAAiCC,eAAjC,QAAwD,+BAAxD;AACA,OAAOC,oBAAP,MAAiC,oCAAjC;AACA,OAAOC,MAAP,MAAmB,uCAAnB;AACA,OAAOC,cAAP,MAA2B,uCAA3B;AAMA,MAAMC,UAAU,GAAG,CAAC,IAAD,CAAnB;AACA,MAAMC,aAAa,GAAG,CAAC,IAAD,EAAO,IAAP,EAAa,IAAb,CAAtB;AAEA,gBAAe,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAsC;AACnD,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCV,QAAQ,CAASQ,MAAT,CAA9C;AAEA,QAAM;AAAEG,IAAAA,SAAF;AAAaC,IAAAA,QAAb;AAAuBC,IAAAA;AAAvB,MAA2CL,MAAM,CAACM,eAAxD;AACA,QAAMC,cAAc,GAAGP,MAAM,CAACQ,WAAP,CAAmBC,MAAnB,CAA2BC,IAAD,IAAUZ,UAAU,CAACa,QAAX,CAAoBD,IAAI,CAACE,UAAzB,CAApC,CAAvB;AACA,QAAMC,gBAAgB,GAAGb,MAAM,CAACQ,WAAP,CAAmBC,MAAnB,CAA2BC,IAAD,IAAUX,aAAa,CAACY,QAAd,CAAuBD,IAAI,CAACE,UAA5B,CAApC,CAAzB;AACA,QAAME,gBAAgB,GAAG;AACvB,KAACpB,eAAe,CAACqB,GAAjB,GAAuBR,cADA;AAEvB,KAACb,eAAe,CAACsB,KAAjB,GAAyBH,gBAFF;AAGvB,KAACnB,eAAe,CAACuB,QAAjB,GAA4BjB,MAAM,CAACQ;AAHZ,GAAzB;;AAMA,QAAMU,aAAa,GAAKC,SAAD,IAAgC;AACrDjB,IAAAA,cAAc,CAAC,EACb,GAAGD,WADU;AAEbO,MAAAA,WAAW,EAAEM,gBAAgB,CAACK,SAAD;AAFhB,KAAD,CAAd;AAID,GALD;;AAOA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAEvB,MAAM,CAACwB,MAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKjB,SAAL,OAAiBC,QAAjB,OAA4BC,eAA5B,eADF,eAEE,oBAAC,cAAD;AAAgB,IAAA,aAAa,EAAEa,aAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF,EAKGG,eAAe,CAACpB,WAAD,CALlB,CADF;AASD,CA5BD;;AA8BA,SAASoB,eAAT,CAAyBrB,MAAzB,EAAyC;AACvC,MAAIA,MAAM,CAACM,eAAP,CAAuBD,eAAvB,KAA2CZ,cAAc,CAAC6B,WAA9D,EAA2E;AACzE,wBAAO,oBAAC,oBAAD;AAAsB,MAAA,MAAM,EAAEtB,MAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACD;AACF","sourcesContent":["import React, { useState } from 'react';\nimport { Player, PlayerPosition, SeasonSelection } from '../types/PlayerDashboardTypes';\nimport QBDashboardContainer from '../containers/QBDashboardContainer';\nimport styles from './PlayerDashboardContainer.module.css';\nimport SeasonSelector from '../components/SeasonSelectorComponent';\n\ntype PlayerDashboardProps = {\n  player: Player\n}\n\nconst ONE_SEASON = [2019];\nconst THREE_SEASONS = [2019, 2018, 2017];\n\nexport default ({ player }: PlayerDashboardProps) => {\n  const [playerState, setPlayerState] = useState<Player>(player);\n\n  const { firstName, lastName, primaryPosition } = player.demographicData;\n  const oneSeasonGames = player.playerGames.filter((game) => ONE_SEASON.includes(game.seasonYear));\n  const threeSeasonGames = player.playerGames.filter((game) => THREE_SEASONS.includes(game.seasonYear));\n  const selectionGameMap = {\n    [SeasonSelection.One]: oneSeasonGames,\n    [SeasonSelection.Three]: threeSeasonGames,\n    [SeasonSelection.Lifetime]: player.playerGames\n  };\n\n  const onStateChange = ((selection: SeasonSelection) => {\n    setPlayerState({\n      ...playerState,\n      playerGames: selectionGameMap[selection]\n    } as Player);\n  })\n\n  return (\n    <div>\n      <div className={styles.header}>\n        <h1>{firstName} {lastName} {primaryPosition} Dashboard</h1>\n        <SeasonSelector onStateChange={onStateChange} />\n      </div>\n      {renderDashboard(playerState)}\n    </div>\n  )\n}\n\nfunction renderDashboard(player: Player) {\n  if (player.demographicData.primaryPosition === PlayerPosition.Quarterback) {\n    return <QBDashboardContainer player={player} />\n  }\n}\n"]},"metadata":{},"sourceType":"module"}