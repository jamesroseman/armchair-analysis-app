{"ast":null,"code":"var _jsxFileName = \"/Users/jroseman/play/football/app/src/containers/PlayerDashboardContainer.tsx\";\nimport React, { useState } from 'react';\nimport { PlayerPosition, SeasonSelection } from '../types/PlayerDashboardTypes';\nimport QBDashboardContainer from '../containers/QBDashboardContainer';\nimport styles from './PlayerDashboardContainer.module.css';\nimport SeasonSelector from '../components/SeasonSelectorComponent';\nconst ONE_SEASON = [2019];\nconst THREE_SEASONS = [2019, 2018, 2017];\nexport default (({\n  initialPlayer\n}) => {\n  const [player, setPlayer] = useState(initialPlayer);\n  const {\n    firstName,\n    lastName,\n    primaryPosition\n  } = player.demographicData;\n  const oneSeasonGames = player.playerGames.filter(game => game.seasonYear in ONE_SEASON);\n  const threeSeasonGames = player.playerGames.filter(game => game.seasonYear in THREE_SEASONS);\n  const selectionGameMap = {\n    [SeasonSelection.One]: oneSeasonGames,\n    [SeasonSelection.Three]: threeSeasonGames,\n    [SeasonSelection.Lifetime]: player.playerGames\n  };\n\n  const onStateChange = selection => ({ ...player,\n    playerGames: selectionGameMap[selection]\n  });\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: styles.title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }\n  }, firstName, \" \", lastName, \" \", primaryPosition, \" Dashboard\"), /*#__PURE__*/React.createElement(SeasonSelector, {\n    onStateChange: onStateChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }\n  }), renderDashboard(player));\n});\n\nfunction isGameInSelection(player, selection) {\n  if (selection === SeasonSelection.One) {\n    return game.seasonYear;\n  }\n}\n\nfunction renderDashboard(player) {\n  if (player.demographicData.primaryPosition === PlayerPosition.Quarterback) {\n    return /*#__PURE__*/React.createElement(QBDashboardContainer, {\n      player: player,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 12\n      }\n    });\n  }\n}","map":{"version":3,"sources":["/Users/jroseman/play/football/app/src/containers/PlayerDashboardContainer.tsx"],"names":["React","useState","PlayerPosition","SeasonSelection","QBDashboardContainer","styles","SeasonSelector","ONE_SEASON","THREE_SEASONS","initialPlayer","player","setPlayer","firstName","lastName","primaryPosition","demographicData","oneSeasonGames","playerGames","filter","game","seasonYear","threeSeasonGames","selectionGameMap","One","Three","Lifetime","onStateChange","selection","title","renderDashboard","isGameInSelection","Quarterback"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAAiBC,cAAjB,EAAiCC,eAAjC,QAAwD,+BAAxD;AACA,OAAOC,oBAAP,MAAiC,oCAAjC;AACA,OAAOC,MAAP,MAAmB,uCAAnB;AACA,OAAOC,cAAP,MAA2B,uCAA3B;AAMA,MAAMC,UAAU,GAAG,CAAC,IAAD,CAAnB;AACA,MAAMC,aAAa,GAAG,CAAC,IAAD,EAAO,IAAP,EAAa,IAAb,CAAtB;AAEA,gBAAe,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAA6C;AAC1D,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBV,QAAQ,CAASQ,aAAT,CAApC;AAEA,QAAM;AAAEG,IAAAA,SAAF;AAAaC,IAAAA,QAAb;AAAuBC,IAAAA;AAAvB,MAA2CJ,MAAM,CAACK,eAAxD;AACA,QAAMC,cAAc,GAAGN,MAAM,CAACO,WAAP,CAAmBC,MAAnB,CAA2BC,IAAD,IAAUA,IAAI,CAACC,UAAL,IAAmBb,UAAvD,CAAvB;AACA,QAAMc,gBAAgB,GAAGX,MAAM,CAACO,WAAP,CAAmBC,MAAnB,CAA2BC,IAAD,IAAUA,IAAI,CAACC,UAAL,IAAmBZ,aAAvD,CAAzB;AACA,QAAMc,gBAAgB,GAAG;AACvB,KAACnB,eAAe,CAACoB,GAAjB,GAAuBP,cADA;AAEvB,KAACb,eAAe,CAACqB,KAAjB,GAAyBH,gBAFF;AAGvB,KAAClB,eAAe,CAACsB,QAAjB,GAA4Bf,MAAM,CAACO;AAHZ,GAAzB;;AAKA,QAAMS,aAAa,GAAIC,SAAD,KAAiC,EACrD,GAAGjB,MADkD;AAErDO,IAAAA,WAAW,EAAEK,gBAAgB,CAACK,SAAD;AAFwB,GAAjC,CAAtB;;AAKA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAI,IAAA,SAAS,EAAEtB,MAAM,CAACuB,KAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA8BhB,SAA9B,OAA0CC,QAA1C,OAAqDC,eAArD,eADF,eAEE,oBAAC,cAAD;AAAgB,IAAA,aAAa,EAAEY,aAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAGGG,eAAe,CAACnB,MAAD,CAHlB,CADF;AAOD,CAvBD;;AAyBA,SAASoB,iBAAT,CAA2BpB,MAA3B,EAA2CiB,SAA3C,EAAgF;AAC9E,MAAIA,SAAS,KAAKxB,eAAe,CAACoB,GAAlC,EAAuC;AACrC,WAAOJ,IAAI,CAACC,UAAZ;AACD;AACF;;AAED,SAASS,eAAT,CAAyBnB,MAAzB,EAAyC;AACvC,MAAIA,MAAM,CAACK,eAAP,CAAuBD,eAAvB,KAA2CZ,cAAc,CAAC6B,WAA9D,EAA2E;AACzE,wBAAO,oBAAC,oBAAD;AAAsB,MAAA,MAAM,EAAErB,MAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACD;AACF","sourcesContent":["import React, { useState } from 'react';\nimport { Player, PlayerPosition, SeasonSelection } from '../types/PlayerDashboardTypes';\nimport QBDashboardContainer from '../containers/QBDashboardContainer';\nimport styles from './PlayerDashboardContainer.module.css';\nimport SeasonSelector from '../components/SeasonSelectorComponent';\n\ntype PlayerDashboardProps = {\n  player: Player\n}\n\nconst ONE_SEASON = [2019];\nconst THREE_SEASONS = [2019, 2018, 2017];\n\nexport default ({ initialPlayer }: PlayerDashboardProps) => {\n  const [player, setPlayer] = useState<Player>(initialPlayer);\n\n  const { firstName, lastName, primaryPosition } = player.demographicData;\n  const oneSeasonGames = player.playerGames.filter((game) => game.seasonYear in ONE_SEASON);\n  const threeSeasonGames = player.playerGames.filter((game) => game.seasonYear in THREE_SEASONS);\n  const selectionGameMap = {\n    [SeasonSelection.One]: oneSeasonGames,\n    [SeasonSelection.Three]: threeSeasonGames,\n    [SeasonSelection.Lifetime]: player.playerGames\n  };\n  const onStateChange = (selection: SeasonSelection) => ({\n    ...player,\n    playerGames: selectionGameMap[selection]\n  } as Player)\n\n  return (\n    <div>\n      <h1 className={styles.title}>{firstName} {lastName} {primaryPosition} Dashboard</h1>\n      <SeasonSelector onStateChange={onStateChange} />\n      {renderDashboard(player)}\n    </div>\n  )\n}\n\nfunction isGameInSelection(player: Player, selection: SeasonSelection): boolean {\n  if (selection === SeasonSelection.One) {\n    return game.seasonYear\n  }\n}\n\nfunction renderDashboard(player: Player) {\n  if (player.demographicData.primaryPosition === PlayerPosition.Quarterback) {\n    return <QBDashboardContainer player={player} />\n  }\n}\n"]},"metadata":{},"sourceType":"module"}