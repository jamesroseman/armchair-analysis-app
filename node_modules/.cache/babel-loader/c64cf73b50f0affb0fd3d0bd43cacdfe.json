{"ast":null,"code":"var _jsxFileName = \"/Users/jroseman/play/football/app/src/containers/PlayerDashboardContainer.tsx\";\nimport React, { useState, useEffect } from 'react';\nimport { PlayerPosition, SeasonSelection } from '../types/PlayerDashboardTypes';\nimport QBDashboardContainer from '../containers/QBDashboardContainer';\nimport styles from './PlayerDashboardContainer.module.css';\nimport SeasonSelector from '../components/SeasonSelectorComponent';\nconst ONE_SEASON = [2019];\nconst THREE_SEASONS = [2019, 2018, 2017];\nexport default (({\n  player\n}) => {\n  const [playerState, setPlayerState] = useState(player);\n  const {\n    firstName,\n    lastName,\n    primaryPosition\n  } = player.demographicData;\n  const oneSeasonGames = player.playerGames.filter(game => {\n    console.log(game.seasonYear);\n    console.log(game.seasonYear in ONE_SEASON);\n    console.log(ONE_SEASON);\n    return game.seasonYear in ONE_SEASON;\n  });\n  const threeSeasonGames = player.playerGames.filter(game => game.seasonYear in THREE_SEASONS);\n  const selectionGameMap = {\n    [SeasonSelection.One]: oneSeasonGames,\n    [SeasonSelection.Three]: threeSeasonGames,\n    [SeasonSelection.Lifetime]: player.playerGames\n  };\n\n  const onStateChange = selection => {\n    setPlayerState({ ...playerState,\n      playerGames: selectionGameMap[selection]\n    });\n  };\n\n  useEffect(() => {\n    console.log(selectionGameMap);\n    onStateChange(SeasonSelection.One);\n  });\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: styles.title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }\n  }, firstName, \" \", lastName, \" \", primaryPosition, \" Dashboard\"), /*#__PURE__*/React.createElement(SeasonSelector, {\n    onStateChange: onStateChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }\n  }), renderDashboard(playerState));\n});\n\nfunction renderDashboard(player) {\n  if (player.demographicData.primaryPosition === PlayerPosition.Quarterback) {\n    return /*#__PURE__*/React.createElement(QBDashboardContainer, {\n      player: player,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 12\n      }\n    });\n  }\n}","map":{"version":3,"sources":["/Users/jroseman/play/football/app/src/containers/PlayerDashboardContainer.tsx"],"names":["React","useState","useEffect","PlayerPosition","SeasonSelection","QBDashboardContainer","styles","SeasonSelector","ONE_SEASON","THREE_SEASONS","player","playerState","setPlayerState","firstName","lastName","primaryPosition","demographicData","oneSeasonGames","playerGames","filter","game","console","log","seasonYear","threeSeasonGames","selectionGameMap","One","Three","Lifetime","onStateChange","selection","title","renderDashboard","Quarterback"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAAiBC,cAAjB,EAAiCC,eAAjC,QAAwD,+BAAxD;AACA,OAAOC,oBAAP,MAAiC,oCAAjC;AACA,OAAOC,MAAP,MAAmB,uCAAnB;AACA,OAAOC,cAAP,MAA2B,uCAA3B;AAMA,MAAMC,UAAU,GAAG,CAAC,IAAD,CAAnB;AACA,MAAMC,aAAa,GAAG,CAAC,IAAD,EAAO,IAAP,EAAa,IAAb,CAAtB;AAEA,gBAAe,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAsC;AACnD,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCX,QAAQ,CAASS,MAAT,CAA9C;AAEA,QAAM;AAAEG,IAAAA,SAAF;AAAaC,IAAAA,QAAb;AAAuBC,IAAAA;AAAvB,MAA2CL,MAAM,CAACM,eAAxD;AACA,QAAMC,cAAc,GAAGP,MAAM,CAACQ,WAAP,CAAmBC,MAAnB,CAA2BC,IAAD,IAAU;AACzDC,IAAAA,OAAO,CAACC,GAAR,CAAYF,IAAI,CAACG,UAAjB;AACAF,IAAAA,OAAO,CAACC,GAAR,CAAYF,IAAI,CAACG,UAAL,IAAmBf,UAA/B;AACAa,IAAAA,OAAO,CAACC,GAAR,CAAYd,UAAZ;AACA,WAAOY,IAAI,CAACG,UAAL,IAAmBf,UAA1B;AACD,GALsB,CAAvB;AAMA,QAAMgB,gBAAgB,GAAGd,MAAM,CAACQ,WAAP,CAAmBC,MAAnB,CAA2BC,IAAD,IAAUA,IAAI,CAACG,UAAL,IAAmBd,aAAvD,CAAzB;AACA,QAAMgB,gBAAgB,GAAG;AACvB,KAACrB,eAAe,CAACsB,GAAjB,GAAuBT,cADA;AAEvB,KAACb,eAAe,CAACuB,KAAjB,GAAyBH,gBAFF;AAGvB,KAACpB,eAAe,CAACwB,QAAjB,GAA4BlB,MAAM,CAACQ;AAHZ,GAAzB;;AAMA,QAAMW,aAAa,GAAIC,SAAD,IAAgC;AACpDlB,IAAAA,cAAc,CAAC,EACb,GAAGD,WADU;AAEbO,MAAAA,WAAW,EAAEO,gBAAgB,CAACK,SAAD;AAFhB,KAAD,CAAd;AAID,GALD;;AAOA5B,EAAAA,SAAS,CAAC,MAAM;AACdmB,IAAAA,OAAO,CAACC,GAAR,CAAYG,gBAAZ;AACAI,IAAAA,aAAa,CAACzB,eAAe,CAACsB,GAAjB,CAAb;AACD,GAHQ,CAAT;AAKA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAI,IAAA,SAAS,EAAEpB,MAAM,CAACyB,KAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA8BlB,SAA9B,OAA0CC,QAA1C,OAAqDC,eAArD,eADF,eAEE,oBAAC,cAAD;AAAgB,IAAA,aAAa,EAAEc,aAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAGGG,eAAe,CAACrB,WAAD,CAHlB,CADF;AAOD,CApCD;;AAsCA,SAASqB,eAAT,CAAyBtB,MAAzB,EAAyC;AACvC,MAAIA,MAAM,CAACM,eAAP,CAAuBD,eAAvB,KAA2CZ,cAAc,CAAC8B,WAA9D,EAA2E;AACzE,wBAAO,oBAAC,oBAAD;AAAsB,MAAA,MAAM,EAAEvB,MAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACD;AACF","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Player, PlayerPosition, SeasonSelection } from '../types/PlayerDashboardTypes';\nimport QBDashboardContainer from '../containers/QBDashboardContainer';\nimport styles from './PlayerDashboardContainer.module.css';\nimport SeasonSelector from '../components/SeasonSelectorComponent';\n\ntype PlayerDashboardProps = {\n  player: Player\n}\n\nconst ONE_SEASON = [2019];\nconst THREE_SEASONS = [2019, 2018, 2017];\n\nexport default ({ player }: PlayerDashboardProps) => {\n  const [playerState, setPlayerState] = useState<Player>(player);\n\n  const { firstName, lastName, primaryPosition } = player.demographicData;\n  const oneSeasonGames = player.playerGames.filter((game) => {\n    console.log(game.seasonYear);\n    console.log(game.seasonYear in ONE_SEASON);\n    console.log(ONE_SEASON);\n    return game.seasonYear in ONE_SEASON;\n  });\n  const threeSeasonGames = player.playerGames.filter((game) => game.seasonYear in THREE_SEASONS);\n  const selectionGameMap = {\n    [SeasonSelection.One]: oneSeasonGames,\n    [SeasonSelection.Three]: threeSeasonGames,\n    [SeasonSelection.Lifetime]: player.playerGames\n  };\n\n  const onStateChange = (selection: SeasonSelection) => {\n    setPlayerState({\n      ...playerState,\n      playerGames: selectionGameMap[selection]\n    } as Player);\n  }\n\n  useEffect(() => {\n    console.log(selectionGameMap);\n    onStateChange(SeasonSelection.One);\n  })\n\n  return (\n    <div>\n      <h1 className={styles.title}>{firstName} {lastName} {primaryPosition} Dashboard</h1>\n      <SeasonSelector onStateChange={onStateChange} />\n      {renderDashboard(playerState)}\n    </div>\n  )\n}\n\nfunction renderDashboard(player: Player) {\n  if (player.demographicData.primaryPosition === PlayerPosition.Quarterback) {\n    return <QBDashboardContainer player={player} />\n  }\n}\n"]},"metadata":{},"sourceType":"module"}