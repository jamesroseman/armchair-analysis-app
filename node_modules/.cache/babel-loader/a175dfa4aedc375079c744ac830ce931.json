{"ast":null,"code":"var _jsxFileName = \"/Users/jroseman/play/football/app/src/PlayerSelector.tsx\";\nimport React, { useState } from 'react';\nimport gql from 'graphql-tag';\nimport { Query } from 'react-apollo';\nimport { InputGroup, Input } from 'reactstrap';\nexport const GET_PLAYER_ABBR = gql`\n  query GetPlayerAbbrFromName($lastName: String){\n    dashPlayerTypeahead(lastName: $lastName) {\n      firstName,\n      lastName,\n      playerAbbr\n    }\n  }\n`;\n\nconst PlayerSelector = () => {\n  const [textAreaValue, setTextAreaValue] = useState(\"\");\n  return /*#__PURE__*/React.createElement(Query, {\n    query: GET_PLAYER_ABBR,\n    variables: {\n      playerAbbr: textAreaValue\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 5\n    }\n  }, ({\n    loading,\n    data\n  }) => !loading && /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(InputGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    onChange: event => setTextAreaValue(event.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }\n  }))));\n};\n\nexport default PlayerSelector;","map":{"version":3,"sources":["/Users/jroseman/play/football/app/src/PlayerSelector.tsx"],"names":["React","useState","gql","Query","InputGroup","Input","GET_PLAYER_ABBR","PlayerSelector","textAreaValue","setTextAreaValue","playerAbbr","loading","data","event","target","value"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,GAAP,MAAgB,aAAhB;AACA,SAASC,KAAT,QAAsB,cAAtB;AACA,SAASC,UAAT,EAAqBC,KAArB,QAAkC,YAAlC;AAeA,OAAO,MAAMC,eAAe,GAAGJ,GAAI;;;;;;;;CAA5B;;AAUP,MAAMK,cAAc,GAAG,MAAM;AAC3B,QAAM,CAACC,aAAD,EAAgBC,gBAAhB,IAAoCR,QAAQ,CAAS,EAAT,CAAlD;AACA,sBACE,oBAAC,KAAD;AAAO,IAAA,KAAK,EAAEK,eAAd;AAA+B,IAAA,SAAS,EAAE;AAAEI,MAAAA,UAAU,EAAEF;AAAd,KAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,CAAC;AAAEG,IAAAA,OAAF;AAAWC,IAAAA;AAAX,GAAD,KAAqD,CAACD,OAAD,iBACpD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,KAAD;AAAO,IAAA,QAAQ,EAAGE,KAAD,IAAWJ,gBAAgB,CAACI,KAAK,CAACC,MAAN,CAAaC,KAAd,CAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,CAFJ,CADF;AAWD,CAbD;;AAeA,eAAeR,cAAf","sourcesContent":["import React, { useState } from 'react';\nimport gql from 'graphql-tag';\nimport { Query } from 'react-apollo';\nimport { InputGroup, Input } from 'reactstrap';\n\ntype DashboardPlayerTypeahead = {\n  firstName: string,\n  lastName: string,\n  playerAbbr: string\n}\n\ntype DashboardPlayerQueryResponse = {\n  loading: boolean;\n  data: {\n    dashPlayerTypeahead: DashboardPlayerTypeahead;\n  }\n}\n\nexport const GET_PLAYER_ABBR = gql`\n  query GetPlayerAbbrFromName($lastName: String){\n    dashPlayerTypeahead(lastName: $lastName) {\n      firstName,\n      lastName,\n      playerAbbr\n    }\n  }\n`;\n\nconst PlayerSelector = () => {\n  const [textAreaValue, setTextAreaValue] = useState<string>(\"\");\n  return (\n    <Query query={GET_PLAYER_ABBR} variables={{ playerAbbr: textAreaValue }}>\n      {({ loading, data }: DashboardPlayerQueryResponse) => !loading && (\n        <div>\n          <InputGroup>\n            <Input onChange={(event) => setTextAreaValue(event.target.value)}/>\n          </InputGroup>\n        </div>\n      )}\n    </Query>\n  );\n}\n\nexport default PlayerSelector;\n"]},"metadata":{},"sourceType":"module"}